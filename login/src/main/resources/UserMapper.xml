<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pressure.test.login.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.pressure.test.login.service.User">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="account" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="role" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="fields1" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="fields2" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="creattime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="updatetime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pressure.test.login.service.User">
    insert into user (id, name, password, 
      account, role, fields1, 
      fields2, creattime, updatetime
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{account,jdbcType=VARCHAR}, #{role,jdbcType=BIT}, #{fields1,jdbcType=VARCHAR}, 
      #{fields2,jdbcType=VARCHAR}, #{creattime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.pressure.test.login.service.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      role = #{role,jdbcType=BIT},
      fields1 = #{fields1,jdbcType=VARCHAR},
      fields2 = #{fields2,jdbcType=VARCHAR},
      creattime = #{creattime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, name, password, account, role, fields1, fields2, creattime, updatetime
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, password, account, role, fields1, fields2, creattime, updatetime
    from user
  </select>
  <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, name, password, account, role, fields1, fields2, creattime, updatetime
    from user
    where name = #{username,jdbcType=VARCHAR}
  </select>
</mapper>